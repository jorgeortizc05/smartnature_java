<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:uti="http://java.sun.com/jsf/composite/util"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:b="http://bootsfaces.net/ui"
    xmlns:p="http://primefaces.org/ui">
<!-- 
Autor: ING. JORGE LUIS ORTIZ CACERES
Fecha de Creacion:14/09/2018
Fecha de Modificacion: 22/09/2018
Empresa: CASAORTIZ JORGE INC C.O.J
Funcion: Controlador Articulo Controller.
-->
<h:head>
	<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script type="text/javascript" src="https://code.highcharts.com/highcharts.js"></script>
	<script type="text/javascript" src="https://code.highcharts.com/modules/exporting.js"></script>
	<script type="text/javascript" src="https://code.highcharts.com/modules/export-data.js"></script>
	<script type="text/javascript" src="https://code.highcharts.com/modules/accessibility.js"></script>
	<h:outputScript>
    	<![CDATA[
			Highcharts.chart('container', {
		    chart: {
		        type: 'spline',
		        animation: Highcharts.svg, // don't animate in old IE
		        marginRight: 10,
		        events: {
		            load: function () {
		
		                // set up the updating of the chart each second
		                var series = this.series[0];
		                setInterval(function () {
		                    var x = (new Date()).getTime(), // current time
		                        y = Math.random();
		                    series.addPoint([x, y], true, true);
		                }, 1000);
		            }
		        }
		    },
		
		    time: {
		        useUTC: false
		    },
		
		    title: {
		        text: 'Live random data'
		    },
		
		    accessibility: {
		        announceNewData: {
		            enabled: true,
		            minAnnounceInterval: 15000,
		            announcementFormatter: function (allSeries, newSeries, newPoint) {
		                if (newPoint) {
		                    return 'New point added. Value: ' + newPoint.y;
		                }
		                return false;
		            }
		        }
		    },
		
		    xAxis: {
		        type: 'datetime',
		        tickPixelInterval: 150
		    },
		
		    yAxis: {
		        title: {
		            text: 'Value'
		        },
		        plotLines: [{
		            value: 0,
		            width: 1,
		            color: '#808080'
		        }]
		    },
		
		    tooltip: {
		        headerFormat: '<b>{series.name}</b><br/>',
		        pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'
		    },
		
		    legend: {
		        enabled: false
		    },
		
		    exporting: {
		        enabled: false
		    },
		
		    series: [{
		        name: 'Random data',
		        data: (function () {
		            // generate an array of random data
		            var data = [],<h:outputScript src="" target="head"/>
	<h:outputScript src="" target="head"/>
	<h:outputScript src="" target="head"/>
	<h:outputScript src="" target="head"/>
		                time = (new Date()).getTime(),
		                i;
		
		            for (i = -19; i <= 0; i += 1) {
		                data.push({
		                    x: time + i * 1000,
		                    y: Math.random()
		                });
		            }
		            return data;
		        }())
		    }]
		});

	]]>
</h:outputScript>
</h:head>

<ui:composition
	template="/WEB-INF/facelets/templates/plantillaGeneral.xhtml">

	<ui:define name="cuerpo" bootsFacesDecorator="true">
	
	
    <div id="container"></div>
    <p class="highcharts-description">
        Chart showing data updating every second, with old data being removed.
    </p>
	
	
	<b:panel id="pn1" title="Sensores" look="primary">
	    <p:poll listener="#{dashboardView.loadLastDevice()}" update="pn_sensors"/>
		<b:panelGrid columns="3" id="pn_sensors">
		<h:outputLabel value="Humedad del Suelo" />
		<h:outputLabel value="Temperatura Ambiente" />
		<h:outputLabel value="Humedad Ambiente" />
		
		<h:outputText value="#{dashboardView.newSensor.humedadSuelo}" id="num_humedad_suelo"/>
		<h:outputText value="#{dashboardView.newSensor.tempAmbiente} Centigrados" id="num_temp_ambiente"/>
		<h:outputText value="#{dashboardView.newSensor.humedadAmbiente} % RH" id="num_humedad_ambiente"/>
		
		</b:panelGrid>
	</b:panel>
		
	</ui:define>
	


</ui:composition>
</html>